#Secure Linux // ansible-playbook -i inventory.ini --extra-vars "@sls-vars.yml" sls.yml

---
- name: Configurar seguridad con SSH, Fail2Ban, Auditd, ajustes de red, Lynis, ClamAV, Google Authenticator y políticas de contraseñas en Debian y Ubuntu
  hosts: all
  become: true  # Escalamiento de privilegios
  vars_files:
    - vars.yml  # Cargar el archivo de variables
  tasks:
    # Configurar SSH
    - name: Asegurarse de que PermitRootLogin esté configurado como no
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
        state: present
        backup: yes

    - name: Asegurarse de que PasswordAuthentication esté configurado como no
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication no'
        state: present
        backup: yes

    - name: Configurar el puerto SSH usando la variable
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?Port'
        line: "Port {{ ssh_port }}"  # Usar la variable ssh_port
        state: present
        backup: yes

    - name: Asegurarse de que el protocolo SSH sea 2
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?Protocol'
        line: 'Protocol 2'
        state: present
        backup: yes

    - name: Reiniciar el servicio SSH
      service:
        name: ssh
        state: restarted

    # Instalar y configurar Fail2Ban
    - name: Instalar Fail2Ban
      package:
        name: fail2ban
        state: present

    - name: Configurar Fail2Ban para proteger SSH
      copy:
        dest: /etc/fail2ban/jail.local
        content: |
          [DEFAULT]
          ignoreip = 127.0.0.1/8
          bantime  = 10m
          findtime  = 10m
          maxretry = 5
          
          [sshd]
          enabled = true
          # Agregar las IPs de la variable fail2ban_ignore_ips
          {% for ip in fail2ban_ignore_ips %}
          ignoreip = {{ ip }}
          {% endfor %}
        owner: root
        group: root
        mode: '0644'

    - name: Reiniciar Fail2Ban para aplicar cambios
      service:
        name: fail2ban
        state: restarted

    # Instalar y configurar Auditd
    - name: Instalar auditd
      package:
        name: auditd
        state: present

    - name: Configurar auditd para monitoreo básico
      copy:
        dest: /etc/audit/audit.rules
        content: |
          -D
          -b 8192
          -w /etc/passwd -p wa -k passwd_changes
          -w /etc/shadow -p wa -k shadow_changes
          -w /etc/ssh/sshd_config -p wa -k ssh_config_changes
        owner: root
        group: root
        mode: '0640'

    - name: Reiniciar auditd para aplicar cambios
      service:
        name: auditd
        state: restarted

    # Configuración de red en /etc/sysctl.conf
    - name: Configurar net.ipv4.tcp_syncookies
      lineinfile:
        path: /etc/sysctl.conf
        regexp: '^net.ipv4.tcp_syncookies'
        line: 'net.ipv4.tcp_syncookies = 1'
        state: present
        backup: yes

    - name: Configurar net.ipv4.conf.all.rp_filter
      lineinfile:
        path: /etc/sysctl.conf
        regexp: '^net.ipv4.conf.all.rp_filter'
        line: 'net.ipv4.conf.all.rp_filter = 1'
        state: present
        backup: yes

    - name: Configurar net.ipv4.conf.default.accept_source_route
      lineinfile:
        path: /etc/sysctl.conf
        regexp: '^net.ipv4.conf.default.accept_source_route'
        line: 'net.ipv4.conf.default.accept_source_route = 0'
        state: present
        backup: yes

    - name: Aplicar configuraciones de red
      command: sysctl -p

    # Instalar y configurar Lynis
    - name: Agregar repositorio de Lynis (para sistemas basados en APT)
      apt_repository:
        repo: "ppa:candlecorp/lynis"
        state: present
      when: ansible_facts['os_family'] == "Debian"

    - name: Instalar Lynis
      package:
        name: lynis
        state: present

    - name: Ejecutar un escaneo básico de Lynis
      command: lynis audit system
      register: lynis_output

    - name: Mostrar resultados de Lynis
      debug:
        var: lynis_output.stdout

    # Instalar y configurar ClamAV
    - name: Instalar ClamAV y ClamAV Daemon
      package:
        name:
          - clamav
          - clamav-daemon
        state: present

    - name: Actualizar la base de datos de firmas de ClamAV
      command: freshclam

    - name: Configurar ClamAV Daemon para ejecución automática
      service:
        name: clamav-daemon
        state: started
        enabled: true

    - name: Realizar un escaneo básico con ClamAV
      command: clamscan -r / --exclude-dir="^/sys" --infected
      register: clamav_scan_output
      ignore_errors: yes

    - name: Mostrar resultados del escaneo de ClamAV
      debug:
        var: clamav_scan_output.stdout

    # Instalar y configurar Google Authenticator
    - name: Instalar libpam-google-authenticator
      package:
        name: libpam-google-authenticator
        state: present

    - name: Configurar PAM para Google Authenticator
      lineinfile:
        path: /etc/pam.d/sshd
        insertafter: EOF
        line: "auth required pam_google_authenticator.so"

    - name: Configurar SSH para permitir ChallengeResponseAuthentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?ChallengeResponseAuthentication'
        line: 'ChallengeResponseAuthentication yes'
        state: present

    - name: Reiniciar el servicio SSH
      service:
        name: ssh
        state: restarted

    # Instalar y configurar pwquality
    - name: Instalar pwquality
      package:
        name: libpam-pwquality
        state: present

    - name: Configurar políticas de contraseñas con pwquality
      copy:
        dest: /etc/security

